{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactMoviesApp\\\\moviesapp\\\\src\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, NavLink } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const imgApi = \"https://image.tmdb.org/t/p/w1280/\";\n  const key = \"0bf4238faa8f185063b116ee5de97fdb\";\n  const imgPath = 'https://image.tmdb.org/t/p/w1280/';\n  const searchApi = \"https://api.themoviedb.org/3/search/movie?sort_by=popularity.desc&api_key=fec79be029eaa0a5759cc99d46d4debb&query=\";\n  const videoApi = \"https://www.themoviedb.org/movie/vidCode-black-widow#play=Fp9pNPdNwjI\";\n  const vid = `https://www.themoviedb.org/movie/${id}-+${title}`;\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearch] = useState(\"\");\n\n  const getMoviesVid = async () => {\n    const resp = await fetch(\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=fec79be029eaa0a5759cc99d46d4debb\");\n    const realData = await resp.json();\n    console.log(realData.results);\n    setData(realData.results);\n  };\n\n  useEffect(() => {\n    getMoviesVid();\n  }, []);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    fetch(searchApi + searchTerm).then(resp => resp.json()).then(data => {\n      setData(data.results);\n    });\n  };\n\n  const handleOnChange = event => {\n    setSearch(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleOnSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search\",\n          className: \"search\",\n          value: searchTerm,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), data.map((curEle, ind) => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: vid,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgPath + curEle.poster_path,\n                alt: curEle.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie_info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", curEle.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"${getclassByRate(vote_average)}\",\n                children: [\" \", curEle.vote_average, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"overview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Relese Date: \", curEle.release_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this), curEle.overview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Movies, \"y0PsfblFoz2eY1N6E5cBvNT/YLk=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["E:/ReactMoviesApp/moviesapp/src/Movies.jsx"],"names":["React","useEffect","useState","NavLink","Movies","imgApi","key","imgPath","searchApi","videoApi","vid","id","title","data","setData","searchTerm","setSearch","getMoviesVid","resp","fetch","realData","json","console","log","results","handleOnSubmit","event","preventDefault","then","handleOnChange","target","value","map","curEle","ind","poster_path","vote_average","release_date","overview"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, NavLink} from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n \r\n\r\nconst  Movies = () => {\r\n     \r\n\r\n    const imgApi = (\"https://image.tmdb.org/t/p/w1280/\");\r\n    const key = \"0bf4238faa8f185063b116ee5de97fdb\";\r\n    const imgPath = 'https://image.tmdb.org/t/p/w1280/';\r\n    const searchApi = \"https://api.themoviedb.org/3/search/movie?sort_by=popularity.desc&api_key=fec79be029eaa0a5759cc99d46d4debb&query=\";\r\n    const videoApi = \"https://www.themoviedb.org/movie/vidCode-black-widow#play=Fp9pNPdNwjI\";\r\n    const vid = `https://www.themoviedb.org/movie/${id}-+${title}`;\r\n\r\n    const [data, setData] = useState([]);\r\n    const [searchTerm, setSearch] = useState(\"\");\r\n\r\n    const getMoviesVid = async () => {\r\n         \r\n        const resp = await fetch(\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=fec79be029eaa0a5759cc99d46d4debb\");\r\n        const realData = await resp.json();\r\n        console.log(realData.results);\r\n        setData(realData.results);\r\n    }\r\n       \r\n    useEffect(() => {\r\n        getMoviesVid ();\r\n         \r\n    }, []); \r\n      \r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n       fetch(searchApi+searchTerm)\r\n       .then((resp) => resp.json())\r\n       .then((data) => {\r\n           setData(data.results);\r\n       });\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n       setSearch(event.target.value); \r\n    }\r\n        \r\n  return (\r\n      <>\r\n      <header>\r\n            <form action=\"\" onSubmit={handleOnSubmit} >\r\n                <input type=\"search\" \r\n                    placeholder=\"Search\" \r\n                    className=\"search\"\r\n                    value={searchTerm}\r\n                    onChange={handleOnChange}\r\n                />\r\n            </form>\r\n        </header>\r\n            {\r\n                data.map((curEle, ind)=> {\r\n                    return (\r\n                        <span key={ind}>\r\n                        \r\n                            <main >\r\n                                <div className=\"movie\">\r\n                                    <NavLink to={vid}>\r\n                                        <img \r\n                                            src={imgPath+curEle.poster_path}\r\n                                            alt={curEle.title} />  \r\n                                    </NavLink> \r\n                                    <div className=\"movie_info\">\r\n                                        <h3> {curEle.title} </h3>\r\n                                        <span class=\"${getclassByRate(vote_average)}\"> {curEle.vote_average} </span>\r\n                                    </div>\r\n                                    <div className=\"overview\">\r\n                                        <h4>overview:</h4>\r\n                                        <h5>Relese Date: {curEle.release_date}</h5>\r\n                                        {curEle.overview} \r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </span>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n               \r\n        </> \r\n    );\r\n}\r\n\r\nexport default  Movies;\r\n"]},"metadata":{},"sourceType":"module"}