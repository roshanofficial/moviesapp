{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactMoviesApp\\\\moviesapp\\\\src\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const imgPath = 'https://image.tmdb.org/t/p/w1280/';\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearch] = useState(\"\"); // const getMoviesVid = async () => {\n  // }\n\n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=fec79be029eaa0a5759cc99d46d4debb\").then(resp => resp.json()).then(realData => {\n      setData(realData.results);\n    }); // console.log(realData.results);\n    // setData(realData.results);\n  }, []); // const getMovies(API) {\n  // }\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n\n    if (searchTerm) {\n      fetch(searchApi + searchTerm).then(resp => resp.json()).then(data => {\n        setData(data.results);\n      });\n      setSearch('');\n    }\n  };\n\n  const handleOnChange = event => {\n    setSearch(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleOnSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search\",\n          className: \"search\",\n          value: searchTerm,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: data.map((curEle, ind) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgPath + curEle.poster_path,\n              alt: curEle.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie_info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", curEle.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"${getclassByRate(vote_average)}\",\n                children: [\" \", curEle.vote_average, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overview\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"overview:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Relese Date: \", curEle.release_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), curEle.overview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movies, \"y0PsfblFoz2eY1N6E5cBvNT/YLk=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["E:/ReactMoviesApp/moviesapp/src/Movies.jsx"],"names":["React","useEffect","useState","Movies","imgPath","data","setData","searchTerm","setSearch","fetch","then","resp","json","realData","results","handleOnSubmit","event","preventDefault","searchApi","handleOnChange","target","value","map","curEle","ind","poster_path","title","vote_average","release_date","overview"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n \r\n\r\nconst  Movies = () => {\r\n      \r\n    const imgPath = 'https://image.tmdb.org/t/p/w1280/';\r\n    const [data, setData] = useState([]);\r\n    const [searchTerm, setSearch] = useState(\"\");\r\n\r\n    // const getMoviesVid = async () => {\r\n         \r\n        \r\n    // }\r\n    useEffect(() => {\r\n        fetch(\"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=fec79be029eaa0a5759cc99d46d4debb\")\r\n        .then((resp) => resp.json())\r\n        .then((realData) => {\r\n            setData(realData.results)\r\n        });\r\n        // console.log(realData.results);\r\n        // setData(realData.results);\r\n         \r\n    }, []); \r\n\r\n    // const getMovies(API) {\r\n\r\n    // }\r\n    \r\n      \r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(searchTerm) {\r\n\r\n       fetch(searchApi+searchTerm)\r\n       .then((resp) => resp.json())\r\n       .then((data) => {\r\n           setData(data.results);\r\n       });\r\n       setSearch('');\r\n    }\r\n};\r\n\r\n    const handleOnChange = (event) => {\r\n       setSearch(event.target.value); \r\n    }\r\n        \r\n  return (\r\n      <>\r\n      \r\n                \r\n        <header>\r\n            <form action=\"\" onSubmit={handleOnSubmit} >\r\n                <input type=\"search\" \r\n                    placeholder=\"Search\" \r\n                    className=\"search\"\r\n                    value={searchTerm}\r\n                    onChange={handleOnChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    <div className=\"main\">     \r\n        {\r\n            data.map((curEle, ind)=> {\r\n                return (\r\n                    <span key={ind}>\r\n                        <div className=\"movie\">\r\n                            <img \r\n                                src={imgPath+curEle.poster_path}\r\n                                alt={curEle.title} />  \r\n        \r\n                            <div className=\"movie_info\">\r\n                                <h3> {curEle.title} </h3>\r\n                                <span class=\"${getclassByRate(vote_average)}\"> {curEle.vote_average} </span>\r\n                            </div>\r\n                            <div className=\"overview\">\r\n                                <h4>overview:</h4>\r\n                                <h5>Relese Date: {curEle.release_date}</h5>\r\n                                {curEle.overview} \r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                    \r\n                )\r\n            })\r\n        }\r\n    </div>          \r\n        </> \r\n    );\r\n}\r\n\r\nexport default  Movies;\r\n"]},"metadata":{},"sourceType":"module"}